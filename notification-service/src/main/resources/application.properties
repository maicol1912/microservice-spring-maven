
#este es el nombre con el cual se va a registrar en el servidor eureka
spring.application.name=notification-service
server.port=${PORT:0}
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

#Cofiguracion sleuth y zipkin
spring.zipkin.base-url=http://localhost:9411
#hacemos el 100% de las peticiones hagan trace
spring.sleuth.sampler.probability= 1.0


#Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.consumer.group-id=notificationId
# este es para que kafka sepa como debemos de serializar la key y enviarla a kafka broker en este caso este value sera un String
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# este es para que kafka sepa como debemos de serializar el value y enviarla a kafka broker en este caso este value sera un JSON
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=event:com.maicol1912.microservice.dto.OrderPlacedEvent