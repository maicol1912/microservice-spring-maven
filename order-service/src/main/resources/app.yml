management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: 'true'
  endpoint:
    health:
      show-details: always
spring:
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.maicol1912.orderservice.event.OrderPlacedEvent
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    template:
      default-topic: notificationTopic
    bootstrap-servers: localhost:9092
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: '1234'
    username: root
    url: jdbc:mysql://localhost:3306/order-service
  zipkin:
    base-url: http://localhost:9411
  application:
    name: order-service
  sleuth:
    sampler:
      probability: '1.0'
eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
resilience4j:
  timelimiter:
    instances:
      inventory:
        timeoutDuration: 3s
  circuitbreaker:
    instances:
      inventory:
        failureRateThreshold: '50'
        eventConsumerBufferSize: '10'
        permittedNumberOfCallsInHalfOpenState: '3'
        automaticTransitionFromOpenToHalfOpenEnabled: 'true'
        registerHealthIndicator: 'true'
        waitDurationInOpenState: 5s
        slidingWindowType: COUNT_BASED
        slidingWindowSize: '5'
  retry:
    instances:
      inventory:
        maxAttempts: '3'
        waitDuration: 5s
server:
  port: ${PORT:0}
